"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_GridDistortion_js";
exports.ids = ["components_GridDistortion_js"];
exports.modules = {

/***/ "./components/GridDistortion.js":
/*!**************************************!*\
  !*** ./components/GridDistortion.js ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"three\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_2__]);\nthree__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst vertexShader = `\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 vPosition;\n\nvoid main() {\n  vUv = uv;\n  vPosition = position;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}`;\nconst fragmentShader = `\nuniform sampler2D uDataTexture;\nuniform sampler2D uTexture;\nuniform vec4 resolution;\nvarying vec2 vUv;\n\nvoid main() {\n  vec2 uv = vUv;\n  vec4 offset = texture2D(uDataTexture, vUv);\n  gl_FragColor = texture2D(uTexture, uv - 0.02 * offset.rg);\n}`;\nconst GridDistortion = ({ grid = 15, mouse = 0.1, strength = 0.15, relaxation = 0.9, imageSrc, className = '' })=>{\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const imageAspectRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(1);\n    const cameraRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const initialDataRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GridDistortion.useEffect\": ()=>{\n            if (!containerRef.current) return;\n            const container = containerRef.current;\n            const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n            const renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n                antialias: true,\n                alpha: true,\n                powerPreference: \"high-performance\"\n            });\n            renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n            container.appendChild(renderer.domElement);\n            const camera = new three__WEBPACK_IMPORTED_MODULE_2__.OrthographicCamera(0, 0, 0, 0, -1000, 1000);\n            camera.position.z = 2;\n            cameraRef.current = camera;\n            const uniforms = {\n                time: {\n                    value: 0\n                },\n                resolution: {\n                    value: new three__WEBPACK_IMPORTED_MODULE_2__.Vector4()\n                },\n                uTexture: {\n                    value: null\n                },\n                uDataTexture: {\n                    value: null\n                }\n            };\n            const textureLoader = new three__WEBPACK_IMPORTED_MODULE_2__.TextureLoader();\n            textureLoader.load(imageSrc, {\n                \"GridDistortion.useEffect\": (texture)=>{\n                    texture.minFilter = three__WEBPACK_IMPORTED_MODULE_2__.LinearFilter;\n                    imageAspectRef.current = texture.image.width / texture.image.height;\n                    uniforms.uTexture.value = texture;\n                    handleResize();\n                }\n            }[\"GridDistortion.useEffect\"]);\n            const size = grid;\n            const data = new Float32Array(4 * size * size);\n            for(let i = 0; i < size * size; i++){\n                data[i * 4] = Math.random() * 255 - 125;\n                data[i * 4 + 1] = Math.random() * 255 - 125;\n            }\n            initialDataRef.current = new Float32Array(data);\n            const dataTexture = new three__WEBPACK_IMPORTED_MODULE_2__.DataTexture(data, size, size, three__WEBPACK_IMPORTED_MODULE_2__.RGBAFormat, three__WEBPACK_IMPORTED_MODULE_2__.FloatType);\n            dataTexture.needsUpdate = true;\n            uniforms.uDataTexture.value = dataTexture;\n            const material = new three__WEBPACK_IMPORTED_MODULE_2__.ShaderMaterial({\n                side: three__WEBPACK_IMPORTED_MODULE_2__.DoubleSide,\n                uniforms,\n                vertexShader,\n                fragmentShader\n            });\n            const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.PlaneGeometry(1, 1, size - 1, size - 1);\n            const plane = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geometry, material);\n            scene.add(plane);\n            const handleResize = {\n                \"GridDistortion.useEffect.handleResize\": ()=>{\n                    const width = container.offsetWidth;\n                    const height = container.offsetHeight;\n                    const containerAspect = width / height;\n                    const imageAspect = imageAspectRef.current;\n                    renderer.setSize(width, height);\n                    const scale = Math.max(containerAspect / imageAspect, 1);\n                    plane.scale.set(imageAspect * scale, scale, 1);\n                    const frustumHeight = 1;\n                    const frustumWidth = frustumHeight * containerAspect;\n                    camera.left = -frustumWidth / 2;\n                    camera.right = frustumWidth / 2;\n                    camera.top = frustumHeight / 2;\n                    camera.bottom = -frustumHeight / 2;\n                    camera.updateProjectionMatrix();\n                    uniforms.resolution.value.set(width, height, 1, 1);\n                }\n            }[\"GridDistortion.useEffect.handleResize\"];\n            const mouseState = {\n                x: 0,\n                y: 0,\n                prevX: 0,\n                prevY: 0,\n                vX: 0,\n                vY: 0\n            };\n            const handleMouseMove = {\n                \"GridDistortion.useEffect.handleMouseMove\": (e)=>{\n                    const rect = container.getBoundingClientRect();\n                    const x = (e.clientX - rect.left) / rect.width;\n                    const y = 1 - (e.clientY - rect.top) / rect.height;\n                    mouseState.vX = x - mouseState.prevX;\n                    mouseState.vY = y - mouseState.prevY;\n                    Object.assign(mouseState, {\n                        x,\n                        y,\n                        prevX: x,\n                        prevY: y\n                    });\n                }\n            }[\"GridDistortion.useEffect.handleMouseMove\"];\n            const handleMouseLeave = {\n                \"GridDistortion.useEffect.handleMouseLeave\": ()=>{\n                    dataTexture.needsUpdate = true;\n                    Object.assign(mouseState, {\n                        x: 0,\n                        y: 0,\n                        prevX: 0,\n                        prevY: 0,\n                        vX: 0,\n                        vY: 0\n                    });\n                }\n            }[\"GridDistortion.useEffect.handleMouseLeave\"];\n            container.addEventListener('mousemove', handleMouseMove);\n            container.addEventListener('mouseleave', handleMouseLeave);\n            window.addEventListener('resize', handleResize);\n            handleResize();\n            const animate = {\n                \"GridDistortion.useEffect.animate\": ()=>{\n                    requestAnimationFrame(animate);\n                    uniforms.time.value += 0.05;\n                    const data = dataTexture.image.data;\n                    for(let i = 0; i < size * size; i++){\n                        data[i * 4] *= relaxation;\n                        data[i * 4 + 1] *= relaxation;\n                    }\n                    const gridMouseX = size * mouseState.x;\n                    const gridMouseY = size * mouseState.y;\n                    const maxDist = size * mouse;\n                    for(let i = 0; i < size; i++){\n                        for(let j = 0; j < size; j++){\n                            const distance = Math.pow(gridMouseX - i, 2) + Math.pow(gridMouseY - j, 2);\n                            if (distance < maxDist * maxDist) {\n                                const index = 4 * (i + size * j);\n                                const power = Math.min(maxDist / Math.sqrt(distance), 10);\n                                data[index] += strength * 100 * mouseState.vX * power;\n                                data[index + 1] -= strength * 100 * mouseState.vY * power;\n                            }\n                        }\n                    }\n                    dataTexture.needsUpdate = true;\n                    renderer.render(scene, camera);\n                }\n            }[\"GridDistortion.useEffect.animate\"];\n            animate();\n            return ({\n                \"GridDistortion.useEffect\": ()=>{\n                    container.removeEventListener('mousemove', handleMouseMove);\n                    container.removeEventListener('mouseleave', handleMouseLeave);\n                    window.removeEventListener('resize', handleResize);\n                    renderer.dispose();\n                    geometry.dispose();\n                    material.dispose();\n                    dataTexture.dispose();\n                    if (uniforms.uTexture.value) uniforms.uTexture.value.dispose();\n                }\n            })[\"GridDistortion.useEffect\"];\n        }\n    }[\"GridDistortion.useEffect\"], [\n        grid,\n        mouse,\n        strength,\n        relaxation,\n        imageSrc\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: `w-full h-full overflow-hidden ${className}`\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\omara\\\\Ashe\\\\ashe\\\\components\\\\GridDistortion.js\",\n        lineNumber: 187,\n        columnNumber: 10\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GridDistortion);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/GridDistortion.js\n");

/***/ })

};
;